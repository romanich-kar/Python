"""
1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента.
 Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""
list_1 = [1, 'hello', None, 65, 732.22, True]
k = 0
for i in list_1:
    print('Тип', k ,'объекта в списке', type(list_1[k]))
    k = k + 1

"""
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
"""
list_2 = list(input('Введите список элементов: '))
k = 0
new_list = []
if len(list_2) % 2 == 0:
    while k + 1 <= len(list_2):
        a = list_2[k]
        b = list_2[k+1]
        new_list.insert(k, b)
        new_list.insert(k + 1, a)
        k = k + 2
else:
    while k + 1 < len(list_2):
        a = list_2[k]
        b = list_2[k + 1]
        new_list.insert(k, b)
        new_list.insert(k + 1, a)
        k = k + 2
    new_list.insert(-1, list_2[-1])
print('Измененный спискок: ', new_list)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.
"""
# Решение через списки
n = int(input('Введите номер месяца: '))
spring = [3, 4, 5]
summer = [6, 7 , 8]
autumn = [9, 10, 11]
winter = [12, 1, 2]
if n in spring:
    print('Это весенний месяц')
elif n in summer:
    print('Это летний месяц')
elif n in autumn:
    print('Это осенний месяц')
elif n in winter:
    print('Это зимний месяц')
else:
    print('Неверное значение!')

# Решение через словарь
n = int(input('Введите номер месяца: '))
dict_1 = {
    'spring': [3, 4, 5],
    'summer': [6, 7, 8],
    'autumn': [9, 10 ,11],
    'winter': [12, 1, 2]
          }
if n in dict_1['spring']:
    print('Это весенний месяц')
elif n in dict_1['summer']:
    print('Это летний месяц')
elif n in dict_1['autumn']:
    print('Это осенний месяц')
elif n in dict_1['winter']:
    print('Это зимний месяц')
else:
    print('Неверное значение!')

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. 
Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
"""
str = input('Введите строку: ')
list_3 = str.split(' ')
k = 0
for row in list_3:
    if len(list_3[k]) <= 10:
        print(k + 1, ') ', row)
        k = k + 1
    else:
        print(k + 1, ') ', row[:10])
        k = k + 1

"""
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга. 
Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
"""
list_4 = [10, 9, 8, 5, 3, 1]
k = 1
while k == 1:
    n = int(input('Введите элемент рейтинга: '))
    for i in list_4:
        if n > i:
            if list_4.index(i) != 0:
                list_4.insert(list_4.index(i) - 1, n)
            else:
                list_4.insert(0, n)
        elif n == i:
            list_4.insert(list_4.index(i) + 1, n)
        elif n < i and list_4.index(i) + 1 != len(list_4):
            continue
        else:
            list_4.append(n)
    print('Новый рейтинг: ', list_4)
    q = input('Желайте ввести еще один элемент? да/нет: ')
    if q == 'да':
        continue
    else:
        break

"""
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами 
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
"""
my_list = []
names = []
prices = []
amount = []
meas_unit = set()
k = 1
while k == 1:
    a = input('Введите название товара: ')
    b = ('Введите цену товара')
    c = input('Введите количество товара')
    d = input('Введите единицу измерения количества товара')
    dict = {
        'Название': a,
        'Цена': b,
        'Количество': c,
        'Единица измерения': d
    }
    my_list = my_list.append(dict)
    q = input('Желайте ввести еще один товар? да/нет: ')
    if q == 'да':
        continue
    else:
        break
result = enumerate(my_list)
print(result)
for i, dictionary in result:
    names.append(dictionary['Название'])
    prices.append(dictionary['Цена'])
    amount.append(dictionary['Количество'])
    meas_unit.add(dictionary['Единица измерения'])
analytics = {
        'Название': names,
        'Цена': prices,
        'Количество': amount,
        'Единица измерения': meas_unit
}
print(analytics)