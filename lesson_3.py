"""1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль."""
a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
def div_2(a, b):
    try:
        c = a / b
    except ZeroDivisionError:
        print('Деление на ноль невозможно!')
    else:
        print('Результат деления чисел: ', c)
# тестируем
div_2(a, b)

"""2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой."""
def user(name, surname, birthday, city, email, phone):
    my_dict = {
        'Имя ': name,
        'Фамилия ': surname,
        'Дата рождения ': birthday,
        'Город проживания ': city,
        'E-mail ': email,
        'Телефон ': phone
    }
    print('Информация о пользователе: ', my_dict.items())
# тестируем
user('John', 'Wick', '05-04-1975', 'Подгорье', '**********', '*******')

"""3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов."""
def my_func(a, b, c):
    n = [a, b, c]
    n.remove(min(a, b, c))
    return sum(n)
# тестируем
print(my_func(10, -3, 0))

"""4. Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла."""
# Первый способ
def my_func(x, y):
    return 1 / x ** abs(y)
# тестируем
print(my_func(2, -2))

# Второй способ
def my_func(x, y):
    for i in range(y+1, 0):
        x = x * x
    return 1 / x
# тестируем
print(my_func(5, -3))

"""5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу."""
def summator():
    result = 0
    while True:
        a = input('Введите ряд чисел, разделенных пробелом. При вводе других символов программа завершится. ').split(' ')
        for i in a:
            if i.isdigit() == True:
                result = result + int(i)
            else:
                return print('Сумма введенных чисел составляет: ', result)
        print('Сумма введенных чисел составляет: ', result)
    print('Сумма введенных чисел составляет: ', result)
# тестируем
summator()

"""6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text."""
def int_func(word):
    if word.isalnum() == True and word.islower() == True:
        word = word.title()
        return word
    else:
        return print('Недопустимая строка!')

# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
def int_func_2(text):
    result = []
    text = input('Введите строку: ').split(' ')
    for word in text:
        result.append(int_func(word))
    print(' '.join(result))
# тестируем
int_func_2('cognosce te ipsum')